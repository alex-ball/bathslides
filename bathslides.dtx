% \iffalse meta-comment
%<*internal|class|palette|theme>
\def\Version{2016/08/10 v3.0-pre}
%</internal|class|palette|theme>
%<*internal>
\iffalse
%</internal>
%<*readme>
The bathslides class: University of Bath presentations
=========================================================

The bathslides LaTeX class is intended to produce slides for University
of Bath presentations, or an accompanying transcript, or both.
It is based on the beamer class.

Installation
------------

### Pre-requisites ###

You should be able to extract the class file using only the base
tools of a TeX installation, but in order for the documentation to be
typeset correctly, you will need to have the image files
`uob-logo-grey-transparent.pdf` (for PDF) and
`uob-logo-grey-transparent.eps` (for DVI) somewhere TeX can find them.
I recommend you place them in the same folder as `bathslides.dtx`
while compiling the class and in a `tex/generic/logos-ubath` folder
thereafter.

You can download `uob-logo-grey-transparent.eps` from the
[University of Bath website][logo]. To get the PDF version, run
`epstopdf uob-logo-grey-transparent.eps`. The `epstopdf` utility is
available in most TeX distributions.

The documentation uses fonts from the XCharter and sourcesanspro
packages, as well as sourcecodepro if XeLaTeX or LuaLaTeX is used,
or zi4 (inconsolata) otherwise.

### Automated way ###

A makefile is provided which you can use with the Make utility:

  * Running `make` generates the derived files

      - README.md
      - bathslides.pdf
      - bathslides-slides.pdf
      - bathslides.cls

    It also downloads `uob-logo-grey-transparent.eps` using `wget` and
    generates `uob-logo-grey-transparent.pdf` using `epstopdf`.

  * Running `make inst` installs the files (and images) in the user's
    TeX tree.
  * Running `make install` installs the files (and images) in the
    local TeX tree.

The makefile is set up to use latexmk and lualatex by default.
If this causes difficulty you could change it to use pdflatex directly
instead.

### Manual way ###

 1. Compile bathslides.dtx just as you would a normal LaTeX file. As well
    as the usual PDF (or DVI) and auxiliary files, several others are
    generated.

 2. Compile bathslides.dtx a second time with `-jobname=bathslides-slides`
    as a command line option to generate the sample slides.

 3. Move the files to your TeX tree as follows:

      - `source/latex/bathslides`: bathslides.dtx, bathslides.ins
      - `tex/latex/bathslides`: bathslides.cls, and (optionally) the
        separately available image files as noted above
      - `doc/latex/bathslides`: bathslides.pdf, bathslides-slides.pdf,
         README.md

 4. You may then have to update your installation's file name database
    before TeX and friends can see the files.

Licence
-------

Copyright 2015 Alex Ball.

This work consists of the documented LaTeX file bathslides.dtx,
and a Makefile.

The text files contained in this work may be distributed and/or modified
under the conditions of the [LaTeX Project Public License (LPPL)][lppl],
either version 1.3c of this license or (at your option) any later
version.

This work is "maintained" (as per LPPL maintenance status) by [Alex
Ball][me].

[logo]: http://www.bath.ac.uk/marketing/guides-assets/visual-identity/logo/#id4
[lppl]: http://www.latex-project.org/lppl.txt
[me]: http://alexball.me.uk/

%</readme>
%<*class>
%<<LITERATE
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesClass{bathslides}
    [\Version\space Class for University of Bath presentations]
%LITERATE
%</class>
%<*theme>
%<<LITERATE
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{beamerthemeBath}
    [\Version\space Beamer theme for University of Bath presentations]
%LITERATE
%</theme>
%<*class|theme>
%<<LITERATE
%
% == Internal conveniences ==
%
% We will need the 'etoolbox' package's tests and patching utilities,
% and 'calc' will be helpful for calculating lengths.
%
\RequirePackage{etoolbox, calc}

%
% == Options and mode switching ==
%LITERATE
%</class|theme>
%<*class>
%<<LITERATE
%
% Mode switching is delegated to 'beamerswitch', but there are some legacy
% options to support.
%
\DeclareOption{set}{\PassOptionsToClass{article,alsobeamer}{beamerswitch}}
%LITERATE
%</class>
%<*class|theme>
%<<LITERATE
%
% Different parts of the university use different colours. We provide these as
% options.
%
\DeclareOption{darkgrey}{\def\bathslides@contrast{Grey}}
\DeclareOption{university}{\def\bathslides@contrast{University}}
\DeclareOption{study}{\def\bathslides@contrast{Study}}
\DeclareOption{business}{\def\bathslides@contrast{Business}}
\DeclareOption{research}{\def\bathslides@contrast{Research}}
\DeclareOption{depts}{\def\bathslides@contrast{Departments}}
\DeclareOption{engineering}{\def\bathslides@contrast{Engineering}}
\DeclareOption{humsocsci}{\def\bathslides@contrast{Humanities}}
\DeclareOption{science}{\def\bathslides@contrast{Science}}
\DeclareOption{management}{\def\bathslides@contrast{Management}}
%LITERATE
%</class|theme>
%<*class>
%<<LITERATE
%
% All other options are passed to 'beamerswitch'.
%
\DeclareOption*{%
  \PassOptionsToClass{\CurrentOption}{beamerswitch}%
}
%LITERATE
%</class>
%<*class|theme>
%<<LITERATE
%
% We set the default colour scheme (unless the scheme has already been chosen).
%
\ifundef{\bathslides@contrast}{\ExecuteOptions{university}}{}
\ProcessOptions\relax

%LITERATE
%</class|theme>
%<*class>
%<<LITERATE
%
% == Loading the base class ==
%
% Now we load everything we need.
%
% It looks odd to have the |\inst| markers from 'beamer' in the maths font, so
% we used the |textinst| option for 'beamerswitch'.
%
\PassOptionsToClass{textinst}{beamerswitch}
%
% In article mode, we use 12pt text to keep it readable on the podium.
%
\PassOptionsToClass{a4paper,12pt}{article}
%
% I anticipate using fonts with the necessary symbols for 'beamer', but which
% may clash with 'amssymb'.
%
\PassOptionsToClass{noamssymb}{beamer}
\PassOptionsToPackage{noamssymb}{beamerarticle}
%
% We provide the possibility of using colourful tables.
%
\PassOptionsToPackage{table}{xcolor}
\LoadClass{beamerswitch}

%
% == Layout, orthography and typography ==
%
% In handout mode, we lay out two slides to an A4 page. 
%
\handoutlayout{paper=a4paper,nup=2,pnos}
%
% I find slide titles somewhat intrusive in article mode (unless repurposed as
% float captions, say), so we turn them off. I also make use of the more
% 'beamer'-esque |\maketitle| routine provided by 'beamerswitch'.
%
\articlelayout{maketitle,frametitles=none}
%
% Left and right margins of 3cm and top and bottom margins of 2.5cm
% give a typeblock with an approximate golden aspect ratio.
%
\mode<article>{
  \RequirePackage[hmargin=3cm,vmargin=2.5cm]{geometry}
}
%
% I anticipate using fonts with professional features.
%
\mode<presentation>{
  \usefonttheme{professionalfonts}
}
%
% I use British orthography. If there is a demand for it, I might convert the
% following lines to respect class options instead of a hard-coded language, but
% it is easy enough to patch them with |\PassOptionsToPackage| before loading
% the class.
%
\RequirePackage[british]{babel}
\RequirePackage[british,cleanlook]{isodate}
%
% We take advantage of 'microtype' enhancements. We defer loading it until the
% end of the preamble in case the author loads 'fontspec'.
%
\AtEndPreamble{%
  \RequirePackage{microtype}%
}
%
% In article mode, to give the speaker an impression of what appears on the
% slides and what doesn't, we switch to sans serif for slide contents.
%
\addtobeamertemplate{frame begin}{}{\sffamily}
\addtobeamertemplate{frame end}{\rmfamily}{}
%
% When reading from a podium, some extra whitespace helps me keep track of where
% I am. So we switch to using Web-style paragraphs.
%
\mode<article>{%
  \setlength{\parindent}{0pt}%
  \setlength{\parskip}{1em plus 0.2em minus 0.2em}%
%
% But this makes lists a bit too open, so we tighten them up again by reducing
% the `\topsep' to zero. We do this by injecting the appropriate code into the
% second argument of `\list' where this appears in the definition of the three
% main list environments.
%
  \patchcmd{\itemize}{\def}{\topsep\z@\def}{}{}
  \patchcmd{\enumerate}{\usecounter\@enumctr}{\usecounter\@enumctr\topsep\z@}{}{}
  \patchcmd{\description}{\labelwidth\z@}{\labelwidth\z@\topsep\z@}{}{}
%
% We make captions easier to spot. We try to make the placement of the final
% period more intelligent using `\@addpunct' from 'amsthm'.
%
  \RequirePackage[format=hang,justification=raggedright,labelfont=bf]{caption}
  \RequirePackage{amsthm}
  \DeclareCaptionTextFormat{condperiod}{#1\@addpunct{.}}
  \captionsetup{textformat=condperiod}
%
% We also make footnotes look a little neater.
%
  \RequirePackage[hang,multiple,bottom]{footmisc}
  \setlength{\footnotemargin}{1em}
}

%LITERATE
%</class>
%<*theme>
%<<LITERATE
%
% == Presentation font theme ==
%
% Some sensible font sizes and weights for use on slides.
%
\setbeamerfont{frametitle}{size=\LARGE}
\setbeamerfont{framesubtitle}{size=\large}
\setbeamerfont{section in head/foot}{size=\normalsize}
\setbeamerfont{headline}{size=\normalsize}
\setbeamerfont{footline}{size=\scriptsize}
\setbeamerfont{alerted text}{series=\bfseries}

%
% == Presentation colour theme ==
%LITERATE
%</theme>
%<*class|theme>
%<<LITERATE
%
% The colour palette for the presentation:
% \begin{itemize}
% \item ‘primary’ is used for structural elements;
% \item ‘contrast’ is used for the header bar, sidebar, and alerted text;
% \end{itemize}
%
\RequirePackage{bathcolors}
\colorlet{primary}{Slate}
\colorlet{contrast}{\bathslides@contrast}
%LITERATE
%</class|theme>
%<*theme>
%<<LITERATE
%
% Here are the basic colours:
%
\setbeamercolor{normal text}{bg=white,fg=black}
\setbeamercolor{alerted text}{fg=contrast}
\setbeamercolor{example text}{fg=Violet}
\setbeamercolor{structure}{fg=primary}
%
% Here are the palette colours:
%
\setbeamercolor{palette primary}{fg=contrast}
\setbeamercolor{palette tertiary}{fg=primary}
\setbeamercolor{palette secondary}{use={palette primary,palette tertiary},fg=palette primary.fg!50!palette tertiary.fg}
\setbeamercolor{palette quaternary}{fg=black}
\setbeamercolor{palette sidebar primary}{use=palette primary,bg=palette primary.fg,fg=white}
\setbeamercolor{palette sidebar secondary}{use=palette primary,bg=palette primary.fg!75!white,fg=white}
\setbeamercolor{palette sidebar tertiary}{use=palette primary,bg=palette primary.fg!50!white,fg=white}
\setbeamercolor{palette sidebar quaternary}{use=palette primary,bg=palette primary.fg!25!white,fg=white}
%
% Here are the colours for the inner theme elements:
%
\setbeamercolor{subtitle}{parent=normal text}
\setbeamercolor{author}{parent=normal text}
\setbeamercolor{institute}{parent=normal text}
\setbeamercolor{date}{parent=normal text}
%
% Here are the colours for the outer theme elements:
%
\setbeamercolor{headline}{parent=palette sidebar primary}
\setbeamercolor{section in head/foot}{parent=headline}
\setbeamercolor{sidebar}{parent=palette sidebar primary}
\setbeamercolor{footline}{use=palette primary,fg=palette primary.fg}

%LITERATE
%</theme>
%<*class>
%<<LITERATE
%
% == Metadata handling ==
%
% We define some new elements of metadata.
% The |\occasion| command is used to record the event at which the presentation
% is given. The content is available if provided via |\insertoccasion|.
%
\newcommand*{\occasion}[1]{%
  \def\insertoccasion{#1}%
  \subject{Presentation given at #1}%
  \mode<article>{%
    \AtBeginDocument{\hypersetup{pdfsubject={Presentation given at #1}}}%
  }%
}
%
% The |\hashtag| command is used to suggest a hashtag people can use to share
% this presentation on social media. The content is available if provided via
% |\inserthashtag|
%
\newcommand*{\hashtag}[1]{%
  \newcommand*{\inserthashtag}{\href{https://twitter.com/hashtag/#1}{\##1}}%
}
%
% The |\authorurl| command is used to give a URL where more information about
% the speaker is available. The content is available if provided via
% |\insertauthorurl|
%
\newcommand*{\authorurl}[1]{%
  \def\insertauthorurl{#1}%
}
%
% In case the author forgets to include some key metadata, we provide some
% safety values to allow the document to compile.
%
\def\@title{Please provide a title}
\def\@author{Please specify the author}
\edef\@date{\the\year-\ifnum\month<10 0\fi\the\month-\ifnum\day<10 0\fi\the\day}
%
% We add these new elements to the |\maketitle| routine in article mode.
%
  \ifundef{\beamer@originstitute}{%
    \renewcommand{\institute}[2][]{\def\insertinstitute{#2}}%
  }{%
    \renewcommand{\institute}[2][]{\def\insertinstitute{#2}\beamer@originstitute{#2}}%
  }%
\mode<article>{
  \patchcmd{\@maketitle}{%
    \@author
  }{%
    \ifundef{\insertauthorurl}{\@author}{\href{\insertauthorurl}{\@author}}%
  }{}{}
  \patchcmd{\@maketitle}{%
    \large \@date
  }{%
    \large
    \ifdefvoid{\insertoccasion}{}{\insertoccasion, }%
    \printdate{\@date}%
  }{}{}
}

%
% == Late package dependencies ==
%
% The 'cleveref' package is not essential, but it is nice to have.
%
\IfFileExists{cleveref.sty}{%
  \RequirePackage[noabbrev,capitalize,nameinlink]{cleveref}
}

%LITERATE
%</class>
%<*theme>
%<<LITERATE
%
% == Presentation outer theme ==
%
% We will use 'tikz' for the top bar and progress indicator, and 'tcolorbox'
% to style the presentation title on the title slide.
%
\mode<presentation>{
  \RequirePackage{tikz,tcolorbox}
}
%
% We allow a little more horizontal space by squeezing the margins
%
\setbeamersize{text margin left=4mm,text margin right=4mm}
%
% We introduce a switch, |\iftitlepage|, that can be used to provide a
% different layout depending on whether this is a normal or a title slide.
%
\newtoggle{titlepage}
%
% We provide another switch, |\ifbgpicture|, which is used to decide whether
% to use the regular background (‘false’ – default) or a user-supplied image
% (‘true’).
%
\newtoggle{bgpicture}
%
% To prevent the settings for these switches persisting between slides, we reset
% them as part of the set-up of `frame' environments.
%
\preto\beamer@reseteecodes{\togglefalse{bgpicture}\togglefalse{titlepage}}
%
% We allow users to replace the normal template with a background image.
% Note that the image is distorted to fit the slide dimensions, so whatever one
% is chosen needs to have an approximate aspect ratio of 4:3.
% 
% The method used is to save the filename of the image to |\bgpicture|, and let
% the user change it with a frame option, `background'.
%
\newcommand{\bgpicture}{}
\define@key{beamerframe}{background}[]{%
  \ifstrempty{#1}{%
    \togglefalse{bgpicture}
  }{%
    \gdef\bgpicture{#1}\toggletrue{bgpicture}
  }%
}
\setbeamertemplate{background}{%
  \iftoggle{bgpicture}{%
    \includegraphics[width=\paperwidth,height=\paperheight]{\bgpicture}%
    \setbeamersize{sidebar width right=0mm}%
    \setbeamertemplate{sidebar right}[default]%
  }{}%
}
%
% We also provide a slide option for suppressing the display of the section.
%
\define@key{beamerframe}{nosection}[true]{%
  \settoggle{titlepage}{#1}
  \iftoggle{titlepage}{\togglefalse{titlepage}}{\toggletrue{titlepage}}
}
%
% The normal template consists of a coloured bar and the University logo.
% The coloured bar also contains the hashtag, if provided, and the
% section titles (unless this is a title slide).
%
\defbeamertemplate*{headline}{Bath theme}
{
  \begin{tikzpicture}[remember picture, overlay]
    \coordinate[xshift=-9mm, yshift=-4mm] (logo-ne) at (current page.north east);
    \node[inner sep=0pt,anchor=north east] (logo) at (logo-ne)
      {\includegraphics[height=11mm]{uob-logo-grey-transparent}};
    \coordinate[xshift=-1mm,yshift=-1.1mm] (topbar-ne) at (logo.north west);
    \coordinate[xshift=-1mm,yshift=1.1mm] (topbar-se) at (logo.south west);
    \fill[bg] (topbar-se)
      -- (topbar-se -| current page.north west)
      -- (topbar-ne -| current page.north west) [rounded corners=2mm]
      -- (topbar-ne) [sharp corners]
      -- cycle;
    \coordinate[yshift=-9.5mm] (topbar-text-w) at (current page.north west);
    \node[text=fg,font=\rmfamily\scshape,anchor=west,text width=7cm,inner xsep=4mm,align=left] at (topbar-text-w)
      {\iftoggle{titlepage}{}{\hypersetup{linkcolor=fg}\insertsectionhead}};
    \node[text=fg,font=\scriptsize,anchor=east,inner xsep=4mm,align=left] at (logo.west)
      {\ifdefvoid{\inserthashtag}{}{\inserthashtag}};
  \end{tikzpicture}
}
%
% To make the section heading all small caps, we need to patch the
% |\sectionentry| and |\beamer@section| commands.
%
\patchcmd{\sectionentry}%
  {\def\insertsectionhead{#2}}%
  {\def\insertsectionhead{\MakeLowercase{#2}}}%
  {}{}
\patchcmd{\beamer@section}%
  {\def\insertsectionhead{\hyperlink{Navigation\the\c@page}{#1}}}%
  {\def\insertsectionhead{\hyperlink{Navigation\the\c@page}{\MakeLowercase{#1}}}}%
  {}{}
%
% We use a right sidebar containing a clock-style progress counter.
% The mathematics here makes sure the indicator would start at 0° on the
% first slide and end up at 360° on the last, with linear variation
% between. The case of a single slide is handled differently to prevent
% division by zero.
%
\setbeamersize{sidebar width right=7mm}
\defbeamertemplate*{sidebar right}{progress}{%
  \vfill
  \parbox{7mm}{\centering
    \usebeamercolor{palette sidebar tertiary}%
    \begin{tikzpicture}
      \pgfmathparse{equal(\inserttotalframenumber,1)}%
      \ifnum1=\pgfmathresult
        \def\PerCentComplete{360}%
      \else
        \pgfmathqparse{360pt * ((\insertframenumber pt - 1pt) / (\inserttotalframenumber pt - 1pt))}%
        \let\PerCentComplete\pgfmathresult
      \fi
      \draw[fg,fill=bg] (0,0mm)
        -- (90:2.1mm)
        arc[start angle=90, delta angle=-\PerCentComplete, radius=2.1mm]
        -- cycle;
      \draw[fg] (0,0) circle[radius=2.1mm];
    \end{tikzpicture}%
  \par}\par
  \llap{\usebeamertemplate***{navigation symbols}\hskip0.1cm}%
  \vskip 4pt
}

%
% This is our new version of the `frametitle' template.
%
\defbeamertemplate*{frametitle}{bathtitle}{%
  \ifbeamercolorempty[bg]{frametitle}{}{\nointerlineskip}%
  \begin{beamercolorbox}{frametitle}
    \usebeamerfont{frametitle}%
    \ifbool{beamer@plainframe}{}{\vbox to 23mm{}}%
    \strut\insertframetitle\strut\par%
    {%
      \ifdefvoid{\insertframesubtitle}{}{%
        \usebeamerfont{framesubtitle}\usebeamercolor[fg]{framesubtitle}\insertframesubtitle\strut\par
      }%
    }%
    \vskip-1ex%
  \end{beamercolorbox}%
}

%
% By default we remove the tell-tale and seldom used 'beamer' navigation symbols.
%
\setbeamertemplate{navigation symbols}{}

%
% By default 'beamer' uses Roman numerals for split frames. We change this to
% Arabic numerals.
%
\setbeamertemplate{frametitle continuation}{%
  (\insertcontinuationcount)%
}

%
% == Presentation inner theme ==
%
% The 'beamer' title page template lays out the elements of the title page.
% Our custom version uses hooks not dissimilar to those provided by 'memoir',
% in case any special effects are needed.
%
\def\hookpretitle{}
\def\hooktitleauthor{\par\vskip1.5\bigskipamount}
\def\hookauthorinstitute{\par\smallskip}
\def\hookinstituteoccasion{\par\vskip2\bigskipamount}
\def\hookoccasiondate{\par\smallskip}
\def\hookdategraphic{\par\smallskip}
\def\hookpostgraphic{}
%
% We suppress any sectional information, not that there should be any at this
% point, then we add a strut to account for the header bar at the top.
%
\providetoggle{isodate}
\@ifpackageloaded{isodate}{\toggletrue{isodate}}{\togglefalse{isodate}}
\RequirePackage{array}
\setbeamertemplate{title page}{%
  \global\toggletrue{titlepage}%
  \vbox to 16.8mm{}%
%
% Then we have the main bibliographic metadata in the middle.
%
  \begin{centering}
    \hookpretitle
    \begin{beamercolorbox}[sep=0pt]{title}
      \begin{tcolorbox}%
      [width={\linewidth - 3mm}
      ,arc=2mm
      ,sharp corners
      ,rounded corners=northeast
      ,boxrule=0pt
      ,colframe=Grey
      ,colback=Grey
      ,opacityframe=0.9
      ,opacityback=0.9
      ,coltext=white
      ,halign=flush left
      ]
        \usebeamerfont{title}\inserttitle\par%
        \ifdefvoid{\insertsubtitle}{}{%
          \vskip 0.25em%
          {\usebeamerfont{subtitle}\insertsubtitle\par}%
        }%
      \end{tcolorbox}
    \end{beamercolorbox}%
    \hooktitleauthor
    \begin{beamercolorbox}[leftskip=5mm]{author}
      \usebeamerfont{author}\insertauthor
    \end{beamercolorbox}
    \hookauthorinstitute
    \begin{beamercolorbox}[leftskip=5mm]{institute}
      \usebeamerfont{institute}\insertinstitute
    \end{beamercolorbox}
    \hookinstituteoccasion
    \begin{beamercolorbox}[leftskip=5mm]{date}
      \usebeamerfont{date}%
      \ifdefvoid{\insertoccasion}{}{\insertoccasion}%
      \hookoccasiondate
      \iftoggle{isodate}{\printdate{\insertdate}}{\insertdate}
    \end{beamercolorbox}
    \hookdategraphic
    {\usebeamercolor[fg]{titlegraphic}\inserttitlegraphic\par}
    \hookpostgraphic
  \end{centering}
%
% Then we place licence information, if any has been provided, at the bottom.
%
  \vfill
  \begin{beamercolorbox}[leftskip=5mm]{institute}
    \usebeamerfont{institute}
    \begin{tabular}{@{}m{6em}m{25em}@{}}
      \ifdefvoid{\licenseLogo}{}{%
        \ifdefvoid{\licenseUrl}{\licenseLogo}{\href{\licenseUrl}{\licenseLogo}}%
      } &
      \ifdefvoid{\licenseStatement}{}{\licenseStatement} \\
    \end{tabular}
  \end{beamercolorbox}
}

%LITERATE
%</theme>
%<*class>
%<<LITERATE
%
% == Finishing off ==
%
% We provide a |\finale| command for finishing off a document or presentation,
% to parallel |\maketitle|. It behaves differently depending on the mode.
%
% In article mode, we will present relevant information laid out in tabular
% fashion with 'tabularx'. (We could do it with minipages but this is
% fractionally easier.)
%
\mode<article>{%
  \RequirePackage{tabularx}
%
% We begin with a horizontal rule.
%
  \newcommand{\finale}[1][\empty]{%
    \vbox{}
    \small
    \rule[1em]{\textwidth}{0.8pt}\par\nopagebreak
%
% We then draw a table with logos on the left and corresponding text on the
% right.
%
    \setlength{\extrarowheight}{1ex}%
    \renewcommand{\tabularxcolumn}[1]{m{##1}}%
    \begin{tabularx}{\textwidth}{@{}m{22mm}X@{}}
%
% If a licence statement has been provided, we add a row displaying it.
%
    \ifdefvoid{\licenseStatement}{}{%
      \ifdefvoid{\licenseLogo}{}{\parbox[c]{\hsize}{\licenseLogo}}%
      &
      \licenseStatement
      \ifdefvoid{\licenseUrl}{}{: \url{\licenseUrl}} \\
    }%
%
% We then add a row about the group.
%
    \parbox[c]{\hsize}{\includegraphics[width=\hsize]{uob-logo-grey-transparent}} &
    University of Bath\ifdefvoid{\uobGroupName}{}{, \uobGroupName}.
    For more information, please visit
    \ifdefvoid{\uobGroupUrl}{\url{http://www.bath.ac.uk/}}{\url{\uobGroupUrl}}\\
    \end{tabularx}
%
% Lastly, if the optional argument has been provided, we typeset it below the
% table.
%
    \ifx\empty#1\else\par\vskip2pt #1\par\fi
    \normalsize
  }%
}%

%LITERATE
%</class>
%<*theme>
%<<LITERATE
%
% In presentation mode, |\finale| is intended to be used in a frame. It prints
% a thank you and some key information that the audience can note down during
% the questions.
%
% We suppress any sectional information, then we add a strut to account for the
% header bar at the top.
%
\setbeamertemplate{final page}{%
  \global\toggletrue{titlepage}%
  \vbox to 16.8mm{}%
%
% We start with a thank you.
%
  \vfill
  \begin{beamercolorbox}[sep=8pt,center]{title}
    \usebeamerfont{title}Thank you for your attention\par
  \end{beamercolorbox}%
  \par\bigskip
%
% If the author URL has been provided, we display that.
%
  \ifdefvoid{\insertauthorurl}{}{%
    \begin{beamercolorbox}[sep=8pt,center]{author}
      \usebeamerfont{author}%
      \insertauthor: \url{\insertauthorurl}\par
    \end{beamercolorbox}%
  }%
%
% If a group URL has been provided, we display that.
%
  \ifdefvoid{\uobGroupUrl}{}{%
    \begin{beamercolorbox}[sep=8pt,center]{author}
      \usebeamerfont{author}%
      \ifdefvoid{\uobGroupName}{}{\uobGroupName: }%
      \url{\uobGroupUrl}\par
    \end{beamercolorbox}%
  }%
%
% Lastly, we display whatever is in the optional argument, if one has been
% provided.
%
  \ifstrempty{\bathslides@finale}{}{%
    \begin{beamercolorbox}[sep=8pt,center]{author}
      \usebeamerfont{author}\bathslides@finale\par
    \end{beamercolorbox}%
  }
  \vfill
  \vbox{}
}%
%
% We provide the user command for triggering this template.
%
\mode<presentation>{%
  \newcommand{\bathslides@finale}{}
  \newcommand{\finale}[1][]{%
    \renewcommand{\bathslides@finale}{#1}%
    \usebeamertemplate{final page}%
    \renewcommand{\bathslides@finale}{}%
  }%
}
%LITERATE
%</theme>
%<*class>
%<<LITERATE
%
% == Beamer theme ==
%
% For styling the presentation, we use the accompanying 'beamer' theme.
%
\usetheme{Bath}
%LITERATE
%</class>
%<*palette>
%<<LITERATE
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{bathcolors}
    [\Version\space Colour palette for University of Bath documents]
%
% == University colour palette ==
%
% The University colour palette has four primary colours
% (White \sample[0.7em]{white},
% Slate \sample[0.7em]{Slate},
% Grey \sample[0.7em]{Grey}, and
% Bath stone \sample[0.7em]{BathStone})\dots
%
\xdefinecolor{Slate}{RGB}{80,86,94}
\xdefinecolor{Grey}{RGB}{72,69,66}
\xdefinecolor{BathStone}{RGB}{213,211,185}
%
% \dots five section colours
% (University \sample[0.7em]{University},
% Study \sample[0.7em]{Study},
% Business \sample[0.7em]{Business},
% Research \sample[0.7em]{Research}, and
% Departments \sample[0.7em]{Departments})\dots
%
\xdefinecolor{University}{RGB}{9,70,133}
\xdefinecolor{Study}{RGB}{130,154,52}
\xdefinecolor{Business}{RGB}{85,39,119}
\xdefinecolor{Research}{RGB}{59,147,166}
\xdefinecolor{Departments}{RGB}{136,62,40}
%
% \dots four faculty colours
% (Engineering and Design \sample[0.7em]{Engineering},
% Humanities and Social Sciences \sample[0.7em]{Humanities},
% Science \sample[0.7em]{Science}, and
% School of Management \sample[0.7em]{Management})\dots
%
\xdefinecolor{Engineering}{RGB}{193,112,34}
\xdefinecolor{Humanities}{RGB}{161,0,111}
\xdefinecolor{Science}{RGB}{171,182,37}
\xdefinecolor{Management}{RGB}{0,156,228}
%
% \dots and four highlight colours
% (Violet \sample[0.7em]{Violet},
% Lime \sample[0.7em]{Lime},
% Clerical \sample[0.7em]{Clerical}, and
% Slush Puppy \sample[0.7em]{SlushPuppy}).
%
\xdefinecolor{Violet}{RGB}{152,125,176}
\xdefinecolor{Lime}{RGB}{211,216,82}
\xdefinecolor{Clerical}{RGB}{188,92,150}
\xdefinecolor{SlushPuppy}{RGB}{177,215,237}
%LITERATE
%</palette>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\newif\ifThisIsTheMainRun
\makeatletter
\protected@edef\su@SubString{-}%
\protected@edef\su@String{\jobname}%
\def\su@compare#1-#2\@nil{%
  \def\su@param{#2}%
  \ifx\su@param\@empty
    \expandafter\@secondoftwo
  \else
    \expandafter\@firstoftwo
  \fi
}%
\def\su@comp@compare#1#2{\su@compare#2\@nnil#1\@nil}%
\expandafter\expandafter\expandafter\su@comp@compare%
\expandafter\expandafter\expandafter{%
\expandafter\su@SubString\expandafter
}\expandafter{\su@String}%
{\ThisIsTheMainRunfalse}{\ThisIsTheMainRuntrue}
\makeatother
\ifThisIsTheMainRun
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble

----------------------------------------------------------------
The bathslides class: University of Bath presentations
Author:  Alex Ball
E-mail:  a.ball@ukoln.ac.uk
License: Released under the LaTeX Project Public License v1.3c or later
See:     http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2014 Alex Ball <a.ball@ukoln.ac.uk>
\endpostamble

\usedir{tex/latex/bathslides}
\generate{
  \file{bathslides.cls}{\from{\jobname.dtx}{class}}
  \file{bathcolors.sty}{\from{\jobname.dtx}{palette}}
  \file{beamerthemeBath.sty}{\from{\jobname.dtx}{theme}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/bathslides}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/bathslides}
\generate{
  \file{README.md}{\from{\jobname.dtx}{readme}}
}
\fi
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi

%</internal>
%<*driver>
\ProvidesFile{bathslides.dtx}
    [\Version\ Class for University of Bath presentations]
\documentclass[set]{bathslides}

\usepackage{iftex}
\ifPDFTeX
  \usepackage[utf8]{inputenc}
  \usepackage[T1]{fontenc}
  \let\priorfamilydefault\familydefault
  \usepackage[scaled=0.96,sups]{XCharter}
  \usepackage[scaled=0.95,tabular]{sourcesanspro}
  \usepackage[varl,varqu]{zi4}
  \let\familydefault\priorfamilydefault
\else
  \usepackage{fontspec}
  \setmainfont{XCharter}%
    [Scale=0.96
    ,Ligatures=TeX
    ]
  \setsansfont{Source Sans Pro}%
    [Scale=MatchLowercase
    ,Ligatures=TeX
    ,StylisticSet=4
    ,BoldFont={Source Sans Pro Bold}
    ,ItalicFont={Source Sans Pro Italic}
    ,BoldItalicFont={Source Sans Pro Bold Italic}
    ]
  \setmonofont{Source Code Pro}%
    [Scale=MatchLowercase
    ,RawFeature={extend=0.83}
    ,BoldFont={Source Code Pro Bold}
    ,ItalicFont={Source Code Pro Italic}
    ,BoldItalicFont={Source Code Pro Bold Italic}
    ,ItalicFeatures={FakeSlant=0.04}
    ,BoldItalicFeatures={FakeSlant=0.04}
    ]
\fi
\usepackage{metalogo}
\usepackage{multicol}

\usepackage{tcolorbox}
\tcbuselibrary{listings,breakable}
\tcbset{colframe=Slate,colback=BathStone!25}
\lstloadlanguages{[LaTeX]TeX}
\lstset
  { columns=fullflexible
  , aboveskip=0pt
  , belowskip=0pt
  , basicstyle=\ttfamily
  , language={[LaTeX]TeX}
  , texcsstyle=*\color{red!75!black}
  , moredelim=**[s][\color{violet}]{[}{]}
  , moredelim=**[s][\color{blue!75!black}]{\{}{\}}
  , commentstyle=\itshape\color{gray}
  , basicstyle=\small\ttfamily
  , breaklines=true
  , escapechar=
  }
\def\cmds
{ Version
, ProvidesClass
, ProvidesPackage
, DeclareOption
, ExecuteOptions
, ProcessOptions
, LoadClass
, RequirePackage
, PassOptionsToPackage
, IfFileExists
, AtBeginDocument
, AtEndPreamble
, description
, enddescription
, undefined
, @empty
, @gobble
, @title
, @author
, @date
, @maketitle
, z@
, @plus
, @minus
, @tempdima
, @tempdimb
, c@page
, if@tempswa
, setlength
, usefonttheme
, setbeamerfont
, usebeamerfont
, setbeamercolor
, usebeamercolor
, ifbeamercolorempty
, defbeamertemplate
, setbeamertemplate
, addtobeamertemplate
, mode
, subject
, frametitle
, insertframetitle
, framesubtitle
, insertframesubtitle
, inserttitle
, insertsubtitle
, insertauthor
, insertinstitute
, insertdate
, inserttitlegraphic
, insertframenumber
, inserttotalframenumber
, insertcontinuationcount
, insertsectionhead
, beamer@section
, pgfpagesuselayout
, pgfmathparse
, pgfmathqparse
, pgfmathresult
, beamer@originstitute
, beamer@andinst
, beamer@insttitle
, beamer@instinst
, beamer@reseteecodes
, beamerleftmargin
, beamerrightmargin
, setbeamersize
, inst
, xdefinecolor
, providecolor
, colorlet
, usetikzlibrary
, node
, coordinate
, ifthenelse
, ifPDFTeX
, IfEndWith
, setlist
, newlist
, hypersetup
, hyperlink
, href
, url
, define@key
, setkeys
, patchcmd
, preto
, ifundef
, ifdefvoid
, newbool
, ifbool
, booltrue
, boolfalse
, iftoggle
, newtoggle
, toggletrue
, togglefalse
, includegraphics
, printdate
, extrarowheight
, tabularxcolumn
}
\newcommand*{\cmd}[1]{\gappto\cmds{, #1}\textcolor{red!75!black}{\textbackslash\texttt{#1}}}
\newcommand*{\barg}[1]{$\langle${\normalfont\emph{#1}}$\rangle$}
\newcommand*{\marg}[1]{\textcolor{blue!75!black}{\texttt{\{}\barg{#1}\texttt{\}}}}
\newcommand*{\prm}[1]{\textcolor{blue!75!black}{\texttt{#1}}}
\newcommand*{\oarg}[1]{\textcolor{violet}{\texttt{[}\barg{#1}\texttt{]}}}
\newcommand*{\opt}[2][\empty]{\textcolor{violet}{\ttfamily #2}\ifx\empty#1\else\hfill(#1)\fi}
\usepackage{enumitem}
\def\ChangeItem{%
  \let\origitem\item
  \renewcommand{\item}[1][]{\origitem[{\makebox[\textwidth][l]{\strut\normalfont ##1}}]}
}
\newenvironment{describe}[1][]{%
  \begin{description}%
    [style=nextline
    ,before={\ChangeItem}
    ,#1]
}{
  \end{description}
}

\newcommand{\sample}[2][1em]{\bgroup\setlength{\fboxsep}{0pt}\fbox{\color{#2}\rule{#1}{#1}}\egroup}

% For typesetting the implementation
\usepackage{makedoc}
\usepackage{niceverb}
\renewcommand{\SetOffInlineCmdBox}{\textcolor{red!75!black}}
\renewcommand*{\TreatAsCode}[1]{%
  \ifPackageCode
  \else
    \WriteResult{\string\begin{tcblisting}{breakable,listing only,listing options={firstnumber=last}}}%
    \PackageCodeTrue
  \fi
  \WriteResult{#1}%
}
\renewcommand*{\TreatAsComment}[1]{%
  \ifPackageCode
    \WriteResult{\string\end{tcblisting}}%
    \WriteResult{}
    \PackageCodeFalse
    \EveryComment
  \fi
  \WriteResult{#1}%
}
\makeatletter
\PushCatMakeLetter\_
\renewcommand*{\make_doc_arg}[1]{%
  \makedoc_maybe_autocorr
  \ifnum\value{lstnumber}>\z@
    \WriteResult{\string\begin{tcblisting}{breakable,listing only,listing options={firstnumber=1}}}%
    \PackageCodeTrue
  \else
    \PackageCodeFalse
  \fi
  \ProcessFileWith{#1}{%
    \CountInputLines
    \makedoc_line_body
    \process_line_message
  }%
  \ifPackageCode
    \WriteResult{\string\end{tcblisting}}
    \PackageCodeFalse
  \fi
}
\PopLetterCat\_
\makeatother

% \def\licenseLogo{\includegraphics[width=\hsize]{cc_by}}
% \def\licenseStatement{Except where otherwise stated, %
% this work is licensed under the Creative Commons Attribution 4.0 International licence}
% \def\licenseUrl{https://creativecommons.org/licenses/by/4.0/}
% \def\uobGroupName{Library Research Data Service}
% \def\uobGroupUrl{http://www.bath.ac.uk/research/data/}

\usepackage{readprov}
\GetFileInfo{bathslides.cls}
\title{The \protect\textsf{bathslides} class}
\subtitle{University of Bath presentations}
\author{Alex Ball}
\authorurl{http://alexball.me.uk/}
\institute{University of Bath}
\StrSubstitute{\filedate}{/}{-}[\IsoFileDate]
\date{\IsoFileDate}
\occasion{A departmental course}
\hashtag{dummy}

\begin{document}
\begin{frame}[t]
\maketitle
\end{frame}

\begin{abstract}
This is the documentation for and a demonstration of \filename, ‘\fileinfo’, \fileversion, dated \printdateTeX{\filedate}.
\end{abstract}

\section{Usage}

\subsection{Loading the class}

\begin{frame}[fragile]{Using the class}
The class is loaded in the usual way.

\begin{tcblisting}{listing only, no listing options}
\documentclass{bathslides}
\end{tcblisting}

The class defaults to producing slides. You can change this with an option:
\begin{describe}
\item[\opt{handout}]
Lay slides out two to an A4 page, for easy printing.
\item[\opt{trans}]
Produce less dynamic slides: useful for archival versions.
\only<article>{See the \textsf{beamer} manual for a more detailed explanation
  of how this ‘transparencies version’ behaves.}
\item[\opt{article}]
Produce a document in article mode: useful for transcripts.
\item[\opt{set}]
Produce a document in article mode, plus a set of slides (suffixed with
‘\texttt{-slides}’).
\end{describe}
\end{frame}

Note that the \opt{set} option makes a shell call to \textsf{latexmk}, so if shell escape is not enabled, or \textsf{latexmk} is not installed, it will act much like the \opt{article} option. CAUTION: If you intend to use the \opt{set} option, do NOT end your source filename with ‘\texttt{-slides}’.

\begin{frame}[fragile]{Using the class}
The colour scheme can also be adjusted:
\begin{multicols}{2}
\begin{describe}
\item[\opt{darkgrey}]
\sample{Grey}
\item[\opt{university}\quad (default)]
\sample{University}
\item[\opt{study}]
\sample{Study}
\item[\opt{business}]
\sample{Business}
\item[\opt{research}]
\sample{Research}
\item[\opt{depts}]
\sample{Departments}
\item[\opt{engineering}]
\sample{Engineering}
\item[\opt{humsocsci}]
\sample{Humanities}
\item[\opt{science}]
\sample{Science}
\item[\opt{management}]
\sample{Management}
\end{describe}
\end{multicols}
\end{frame}

Behind the scenes, these options affect a colour named ‘\texttt{contrast}’.
(Note that you could set that colour manually to something else if you wished.)
In slide mode, it is used in the top and side bars, and for alerted text.
It is not used by the class in article mode, but is available if you wish to use it yourself.

\subsection{Preamble metadata}

\begin{frame}{Metadata}
When filling out the document metadata, you can use the regular \textsf{beamer} conventions with a few differences:

\begin{describe}
\item[\cmd{date}\marg{ISO date}]
Enter the date in ISO format, e.g.\ 2011-12-13.
\item[\cmd{occasion}\marg{event name}]
Use this to provide the name of the event where the presentation will be given.
\item[\cmd{authorurl}\marg{URL}]
Use this to provide a URL where more details about the author may be consulted (not so useful for multi-author presentations).
\item[\cmd{hashtag}\marg{hashtag}]
Use this to specify exactly one hashtag for sharing on social media. Omit the hash (\#), as the class will add it for you.
\end{describe}
\end{frame}

\subsection{Customizing the title slide}

You can add elements to the title slide by using the hooks provided. (The hooks are also recognized in article mode but they mainly affect the \cmd{finale} command, of which more later.) You use the hooks by defining them, so to use \cmd{uobGroupName}, for example, you would need to do something like this:
\renewcommand*{\do}[1]{\lstset{moretexcs={#1}}}%
\expandafter\docsvlist\expandafter{\cmds}%
\begin{tcblisting}{listing only, no listing options}
\def\uobGroupName{Library Research Services}
\end{tcblisting}

\begin{frame}{Hooks (Group)}
You can associate your presentation with a particular faculty, department, service or group
within the University by defining the following hooks.

\begin{describe}
  \item[\cmd{uobGroupName}]
  The name of the group within the University, e.g. ‘Library Research Services’.
  \item[\cmd{uobGroupUrl}]
  The full URL of the group's home page.
\end{describe}
\end{frame}

\begin{frame}{Hooks (Licence)}
If releasing the presentation under licence, you can declare this by defining
the following hooks.

\begin{describe}
\item[\cmd{licenseLogo}]
This should insert the logo of the licence under which the presentation is released, if applicable. For best results, scale it to fit the width of the bounding box, e.g.\ \cmd{insertgraphics}%
\opt{[width=\cmd{hsize}]}\marg{filename}.
\item[\cmd{licenseStatement}]
A notice concerning the licence, e.g.\ ‘Released under an X licence.’
\item[\cmd{licenseUrl}]
The URL of the full licence text, if applicable.
\end{describe}
\end{frame}

\subsection{Composing your presentation}

The class is set up to ignore non-frame text in presentation mode, and ignore frame titles in article mode. The idea is that you put additional commentary outside frames, and it shows up in the transcript but not the slides. With pictorial slides, you can wrap them in \texttt{figure} environments, and with textual slides you can run them into the text of the commentary.

In article mode, article-only text is shown in a serif font, while text that also appears on a slide is shown in a sans serif font, so you can tell them apart.

\begin{frame}[fragile]{Frame background}
The class provides a new option for frames.

\begin{describe}
\item[{\opt[default: no background]{background=\barg{filename}}}]
Use this option on its own (or omit it) to use the usual blank background, header bar and sidebar.
Use it with an image filename to use that image as the background instead.
This option has no effect in article mode.
\end{describe}
\end{frame}

Note that the background image should suit a 4:3 aspect ratio as it will be stretched to fit. As a reminder, \textsf{beamer} slides are 128\,mm $\times$ 96\,mm.


\subsection{Finishing off}

\begin{frame}[fragile]{Finishing off}
You can insert a closing slide in your presentation to parallel your opening slide.

\begin{describe}
\item[\cmd{finale}\oarg{important note}]
The optional argument lets you add an important note, such as a key link or date, to the end of the slide.
Wrap the command in a bare frame, as you would for \cmd{maketitle}:
\begin{tcolorbox}
\cmd{begin}\prm{\{frame\}}\\
\cmd{finale}\\
\cmd{end}\prm{\{frame\}}
\end{tcolorbox}
\end{describe}
\end{frame}

In article mode, \cmd{finale} inserts a postscript consisting of a horizontal line followed by the licence (if provided) and group or University information.

\begin{frame}
\finale
\end{frame}

\newpage
\section{Implementation}

% New commands introduced by this class:
\gappto{\cmds}{%
, bathslides@contrast
, insertoccasion
, inserthashtag
, insertauthorurl
, fixeddescription
, endfixeddescription
, ifbgpicture
, bgpicturetrue
, bgpicturefalse
, bgpicture
, iftitlepage
, titlepagetrue
, titlepagefalse
, PerCentComplete
, hookpretitle
, hooktitleauthor
, hookauthorinstitute
, hookinstituteoccasion
, hookoccasiondate
, hookdategraphic
, hookpostgraphic
}
\renewcommand*{\do}[1]{\lstset{moretexcs={#1}}}
\expandafter\docsvlist\expandafter{\cmds}
\lstset
  { numbers=left
  , numberstyle=\footnotesize\itshape\color{gray}
  , numbersep=20pt
  }%

\subsection{bathslides.cls}

\renewcommand*{\mdJobName}{bathslides}
\renewcommand*{\mdSectionLevelOne}{\expandafter\string\csname subsubsection\endcsname}
\CopyFDconditionFromTo{PScomment}{comment}
\MakeInputJobDoc[cls]{0}{\SectionLevelOneParseInput}

\subsection{beamerthemeBath.sty}

\renewcommand*{\mdJobName}{beamerthemeBath}
\MakeInputJobDoc[sty]{0}{\SectionLevelOneParseInput}

\subsection{bathcolors.sty}

\renewcommand*{\mdJobName}{bathcolors}
\MakeInputJobDoc[sty]{0}{\SectionLevelOneParseInput}

\end{document}
%</driver>
% \fi
%
\endinput
